/*! For license information please see ic-stoic-identity.js.LICENSE.txt */
!function webpackUniversalModuleDefinition(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define("ic-stoic-identity",[],n):"object"==typeof exports?exports["ic-stoic-identity"]=n():e["ic-stoic-identity"]=n()}(this,(function(){return(()=>{"use strict";var __webpack_modules__={"./src/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "StoicIdentity": () => (/* binding */ StoicIdentity)\n/* harmony export */ });\n/* harmony import */ var _dfinity_principal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @dfinity/principal */ "@dfinity/principal");\n/* harmony import */ var _dfinity_principal__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_dfinity_principal__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _dfinity_agent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @dfinity/agent */ "@dfinity/agent");\n/* harmony import */ var _dfinity_agent__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_dfinity_agent__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _dfinity_identity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @dfinity/identity */ "@dfinity/identity");\n/* harmony import */ var _dfinity_identity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_dfinity_identity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! buffer */ "buffer");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(buffer__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\n\nwindow.Buffer = buffer__WEBPACK_IMPORTED_MODULE_3__.Buffer;\nconst domainSeparator = buffer__WEBPACK_IMPORTED_MODULE_3__.Buffer.from(new TextEncoder().encode(\'\\x0Aic-request\'));\nvar _stoicOrigin = \'https://www.stoicwallet.com\';\n//Identity\nclass PublicKey {\n  constructor(der, type){\n    this._der = der;\n    this._type = type;\n  };\n  getType() {\n    return this._type;\n  };\n  toDer() {\n    return this._der;\n  };\n};\nclass StoicIdentity extends _dfinity_agent__WEBPACK_IMPORTED_MODULE_1__.SignIdentity {\n  constructor(principal, pubkey) {\n    super();\n    this._principal = principal;\n    this._publicKey = pubkey;\n  };\n  \n  static disconnect() {\n    return _stoicLogout();\n  };\n  \n  static connect(host) {\n    return new Promise(async (resolve, reject) => {\n      if (host) _stoicOrigin = host;\n      _stoicLogin(_stoicOrigin).then(data => {\n        resolve(new StoicIdentity(_dfinity_principal__WEBPACK_IMPORTED_MODULE_0__.Principal.fromText(data.principal), new PublicKey(data.key, data.type)));\n      }).catch(reject);\n    });\n  };\n  \n  static load(host) {\n    return new Promise(async (resolve, reject) => {\n      if (host) _stoicOrigin = host;\n      var result = _stoicInit();\n      if (result === false) {\n        resolve(false);\n      } else {\n        var id = new StoicIdentity(_dfinity_principal__WEBPACK_IMPORTED_MODULE_0__.Principal.fromText(result.principal), new PublicKey(result.key, result.type));\n        id.accounts().then(r => {\n          resolve(id);          \n        }).catch(e => {\n          console.log(e);\n          resolve(false);\n        });\n      };\n    });\n  };\n  \n  getPublicKey() {\n    return this._publicKey;\n  };\n  \n  sign(data) {\n    return this._transport(buf2hex(data));\n  };\n  _transport(data) {\n    return _stoicSign("sign", data, this.getPrincipal().toText());\n  };\n  accounts() {\n    return _stoicSign("accounts", "accounts", this.getPrincipal().toText());\n  };\n  transformRequest(request) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const { body, ...fields } = request;\n        const requestId = await (0,_dfinity_agent__WEBPACK_IMPORTED_MODULE_1__.requestIdOf)(body)\n        const pubkey = this.getPublicKey();\n        var response = {\n          ...fields,\n          body : {\n            content: body,\n          }\n        };\n        const result = JSON.parse(await this.sign(buffer__WEBPACK_IMPORTED_MODULE_3__.Buffer.from(buffer__WEBPACK_IMPORTED_MODULE_3__.Buffer.concat([domainSeparator, new Uint8Array(requestId)]))));\n        response.body.sender_sig = hex2buf(result.signed);\n        if (pubkey.getType() == "DelegationIdentity") {\n          var DIC = _dfinity_identity__WEBPACK_IMPORTED_MODULE_2__.DelegationChain.fromJSON(result.chain);\n          response.body.sender_pubkey = DIC.publicKey;\n          response.body.sender_delegation = DIC.delegations;\n        } else {\n          response.body.sender_pubkey = new Uint8Array(Object.values(pubkey.toDer()));\n        }\n        resolve(response);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  };\n};\n\n//Login and sign calls\nvar _stoicWindow, _stoicWindowCB, _stoicApiKey, _stoicApp, _listenerIndex = 0, _listener = {}, _frames = {};\nconst _stoicInit = () => {\n  _stoicApp = JSON.parse(localStorage.getItem("_scApp"));\n  return _stoicApp ? _stoicApp : false;\n};\nconst _stoicLogout = () => {\n  localStorage.removeItem("_scApp");\n  _stoicApiKey = \'\';\n  _stoicApp = null;\n};\nconst _stoicLogin = (host) => {\n  return new Promise(async (resolve, reject) => {\n    var app = await _generateKey();\n    _stoicApiKey = app.apikey;\n    _stoicWindow = window.open(host+\'?authorizeApp\', \'stoic\');\n    _stoicWindowCB = [r => {\n      app.principal = r.principal;\n      app.key = r.key;\n      app.type = r.type;\n      _stoicApp = app;\n      localStorage.setItem("_scApp", JSON.stringify(app));\n      resolve(app);\n    }, reject];\n  });\n};\nconst _stoicSign = (action, payload, principal) => {\n  return new Promise(async function(resolve, reject){\n    var enc = new TextEncoder();\n    var encdata = enc.encode(payload);\n    var privk = await window.crypto.subtle.importKey(\n      "jwk",\n      _stoicApp.secretkey,\n      {\n        name: "ECDSA",\n        namedCurve: "P-384"\n      },\n      true,\n      ["sign"]\n    );\n    var signed = await window.crypto.subtle.sign(\n      {\n        name: "ECDSA",\n        hash: {name: "SHA-384"},\n      },\n      privk,\n      encdata\n    );\n    var sig = buf2hex(signed);\n    _postToFrame({\n      target :  "STOIC-IFRAME",\n      action : action,\n      payload : payload,\n      principal : principal,\n      apikey : _stoicApp.apikey,\n      sig : sig\n    }, resolve, reject);\n  });  \n}\n\n//Private functions\nfunction _generateKey() {\n  return new Promise(async (resolve, reject) => {\n    var keypair = await window.crypto.subtle.generateKey({\n      name: "ECDSA",\n      namedCurve: "P-384"},\n      true,\n      ["sign", "verify"]);\n    var pubk = await window.crypto.subtle.exportKey(\n      "spki",\n      keypair.publicKey\n    );\n    var secretkey = await window.crypto.subtle.exportKey(\n      "jwk",\n      keypair.privateKey\n    );\n    resolve({\n      principal : "",\n      key : "",\n      type : "",\n      secretkey : secretkey,\n      apikey : buf2hex(pubk),\n    });\n  });\n}\nfunction _removeFrame(id) {\n  _frames[id].parentNode.removeChild(_frames[id]);\n};\nfunction _postToFrame(data, resolve, reject) {\n    var thisIndex = _listenerIndex;\n    _listenerIndex += 1;\n    _listener[thisIndex] = [resolve, reject];\n    var ii = document.createElement(\'iframe\');\n    ii.setAttribute(\'id\', \'connect_iframe\'+thisIndex);\n    ii.setAttribute(\'width\', \'0\');\n    ii.setAttribute(\'height\', \'0\');\n    ii.setAttribute(\'border\', \'0\');\n    document.body.appendChild(ii);\n    _frames[thisIndex] = document.getElementById(\'connect_iframe\'+thisIndex);\n    _frames[thisIndex].addEventListener("load", function() {\n      data.listener = thisIndex;\n      _frames[thisIndex].contentWindow.postMessage(data, "*");      \n    });\n    ii.setAttribute(\'src\', _stoicOrigin+\'/?stoicTunnel\');\n};\nfunction buf2hex(buffer) {\n  return [...new Uint8Array(buffer)]\n    .map(x => x.toString(16).padStart(2, \'0\'))\n    .join(\'\');\n}\nfunction hex2buf(hex) {\n  const view = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < hex.length; i += 2) {\n    view[i / 2] = parseInt(hex.substring(i, i + 2), 16)\n  }\n  return view\n}\nconst deserialize = (d) => {\n  return _dfinity_agent__WEBPACK_IMPORTED_MODULE_1__.Cbor.decode(hex2buf(d));\n};\nconst serialize = (d) => {\n  return buf2hex(_dfinity_agent__WEBPACK_IMPORTED_MODULE_1__.Cbor.encode(d));\n};\n\n//Message handler\nwindow.addEventListener("message", function(e){\n  if (e.origin == _stoicOrigin) {\n    if (e && e.data && e.data.target === \'STOIC-EXT\') {\n      if (typeof e.data.success != \'undefined\' && e.data.success){\n        _listener[e.data.listener][0](e.data.data);      \n      } else {\n        _listener[e.data.listener][1](e.data.data);      \n      }\n      _removeFrame(e.data.listener);\n    }else if (e.data.action == "initiateStoicConnect") {      \n      _stoicWindow.postMessage({action : "requestAuthorization", apikey : _stoicApiKey}, "*");\n    } else if (e.data.action == "rejectAuthorization") {      \n      _stoicWindowCB[1]("Authorization Rejected");\n      _stoicWindowCB = null;\n      _stoicWindow.close();\n    } else if (e.data.action == "confirmAuthorization") {\n      _stoicWindowCB[0](e.data);\n      _stoicWindowCB = null;\n      _stoicWindow.close();\n    } \n  }\n  return;\n}, false);\n\n//# sourceURL=webpack://ic-stoic-identity/./src/index.js?')},"@dfinity/agent":e=>{e.exports=require("@dfinity/agent")},"@dfinity/identity":e=>{e.exports=require("@dfinity/identity")},"@dfinity/principal":e=>{e.exports=require("@dfinity/principal")},buffer:e=>{e.exports=require("buffer")}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var t=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](t,t.exports,__webpack_require__),t.exports}__webpack_require__.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(n,{a:n}),n},__webpack_require__.d=(e,n)=>{for(var t in n)__webpack_require__.o(n,t)&&!__webpack_require__.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},__webpack_require__.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./src/index.js");return __webpack_exports__})()}));