!function webpackUniversalModuleDefinition(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("ic-stoic-identity",[],e):"object"==typeof exports?exports["ic-stoic-identity"]=e():t["ic-stoic-identity"]=e()}(this,(function(){return(()=>{"use strict";var t={d:(e,i)=>{for(var n in i)t.o(i,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:i[n]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{StoicIdentity:()=>StoicIdentity});const i=require("@dfinity/principal"),n=require("@dfinity/agent"),r=require("@dfinity/identity"),o=require("buffer");window.Buffer=o.Buffer;const a=o.Buffer.from((new TextEncoder).encode("\nic-request"));var s="https://www.stoicwallet.com";class PublicKey{constructor(t,e){this._der=t,this._type=e}getType(){return this._type}toDer(){return this._der}}class StoicIdentity extends n.SignIdentity{constructor(t,e,i){super(),this._transportMethod="popup",i&&(this._transportMethod=i),this._principal=t,this._publicKey=e}static disconnect(){return _stoicLogout()}static connect(t,e){return t&&(s=t),e&&(this._transportMethod=e),new Promise((async(t,e)=>{_stoicLogin(this._transportMethod).then((e=>{let n=new StoicIdentity(i.Principal.fromText(e.principal),new PublicKey(e.key,e.type),this._transportMethod);t(n)})).catch(e)}))}static load(t,e){return t&&(s=t),e&&(this._transportMethod=e),new Promise((async(t,e)=>{var n=_stoicInit();if(!1===n)t(!1);else{var r=new StoicIdentity(i.Principal.fromText(n.principal),new PublicKey(n.key,n.type),this._transportMethod);r.accounts().then((e=>{t(r)})).catch((e=>{console.log("Couldn't load accounts",e),t(!1)}))}}))}getPublicKey(){return this._publicKey}sign(t){return this._transport(buf2hex(t))}_transport(t){return _stoicSign("sign",t,this.getPrincipal().toText(),this._transportMethod)}accounts(){return _stoicSign("accounts","accounts",this.getPrincipal().toText(),this._transportMethod)}transformRequest(t){return new Promise((async(e,i)=>{try{const{body:i,...p}=t,d=await(0,n.requestIdOf)(i),u=this.getPublicKey();var s={...p,body:{content:i}};const y=JSON.parse(await this.sign(o.Buffer.from(o.Buffer.concat([a,new Uint8Array(d)]))));if(s.body.sender_sig=hex2buf(y.signed),"DelegationIdentity"==u.getType()){var c=r.DelegationChain.fromJSON(y.chain);s.body.sender_pubkey=c.publicKey,s.body.sender_delegation=c.delegations}else s.body.sender_pubkey=new Uint8Array(Object.values(u.toDer()));e(s)}catch(t){i(t)}}))}}var c,p,d,u,y=0,l={},f={};const _stoicInit=()=>(u=JSON.parse(localStorage.getItem("_scApp")))||!1,_stoicLogout=()=>{localStorage.removeItem("_scApp"),d="",u=null},_stoicLogin=t=>new Promise((async(t,e)=>{var i=await function _generateKey(){return new Promise((async(t,e)=>{var i=await window.crypto.subtle.generateKey({name:"ECDSA",namedCurve:"P-384"},!0,["sign","verify"]),n=await window.crypto.subtle.exportKey("spki",i.publicKey);t({principal:"",key:"",type:"",secretkey:await window.crypto.subtle.exportKey("jwk",i.privateKey),apikey:buf2hex(n)})}))}();d=i.apikey,c=window.open(s+"?authorizeApp","stoic"),p=[e=>{i.principal=e.principal,i.key=e.key,i.type=e.type,u=i,localStorage.setItem("_scApp",JSON.stringify(i)),t(i)},e]})),_stoicSign=(t,e,i,n)=>new Promise((async function(r,o){var a=(new TextEncoder).encode(e),c=await window.crypto.subtle.importKey("jwk",u.secretkey,{name:"ECDSA",namedCurve:"P-384"},!0,["sign"]),p=buf2hex(await window.crypto.subtle.sign({name:"ECDSA",hash:{name:"SHA-384"}},c,a));const d={action:t,payload:e,principal:i,apikey:u.apikey,sig:p};"popup"===n?(d.target="STOIC-POPUP",function _postToPopup(t,e,i){var n=y;y+=1,l[n]=[e,i];const r=window.open(`${s}/?stoicTunnel&transport=popup&lid=`+n,"stoic_"+n,"width=500,height=600");if(!r)return i("Failed to open popup window. It may have been blocked by the browser.");setTimeout((()=>{window.focus()}),100),t.listener=n,f[n]={target:r,type:"popup",data:t}}(d,r,o)):(d.target="STOIC-IFRAME",function _postToFrame(t,e,i){var n=y;y+=1,l[n]=[e,i];var r=document.createElement("iframe");r.setAttribute("id","connect_iframe"+n),r.setAttribute("width","0"),r.setAttribute("height","0"),r.setAttribute("border","0"),document.body.appendChild(r),t.listener=n,f[n]={target:r,type:"iframe",data:t},r.addEventListener("load",(function(){f[n].target.contentWindow.postMessage(t,"*")})),r.setAttribute("src",s+"/?stoicTunnel")}(d,r,o))}));function buf2hex(t){return[...new Uint8Array(t)].map((t=>t.toString(16).padStart(2,"0"))).join("")}function hex2buf(t){const e=new Uint8Array(t.length/2);for(let i=0;i<t.length;i+=2)e[i/2]=parseInt(t.substring(i,i+2),16);return e}return window.addEventListener("message",(function(t){if(t.origin==s&&t&&t.data)if("STOIC-EXT"===t.data.target){const[e,i]=l[t.data.listener]||[];void 0!==t.data.success&&t.data.success?e(t.data.data):i(t.data.data),function _removeFrame(t){"iframe"===f[t].type?f[t].target.parentNode.removeChild(f[t].target):"popup"===f[t].type&&f[t].target.close(),delete f[t]}(t.data.listener),delete l[t.data.listener]}else if("stoicPopupLoad"===t.data.action){let e=f[t.data.listener];e.target.postMessage(e.data,"*")}else"initiateStoicConnect"==t.data.action?c.postMessage({action:"requestAuthorization",apikey:d},"*"):"rejectAuthorization"==t.data.action?(p[1]("Authorization Rejected"),p=null,c.close()):"confirmAuthorization"==t.data.action&&(p[0](t.data),p=null,c.close())}),!1),e})()}));